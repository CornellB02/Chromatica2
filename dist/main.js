/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("document.addEventListener('DOMContentLoaded', () => {\n  const input = document.getElementById(\"file-input\");\n  const player = document.getElementById(\"player\");\n  const playButton = document.getElementById(\"play-button\");\n  const pauseButton = document.getElementById(\"pause-button\");\n  const recordButton = document.getElementById(\"record-button\");\n  // const stopButton = document.getElementById(\"stop-button\");\n  const canvas = document.querySelector(\"#canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  const brightnessButton = document.getElementById(\"brightness-button\");\n  const seekBar = document.getElementById(\"seek-bar\");\n  const currentTime = document.getElementById(\"current-time\");\n  const totalTime = document.getElementById(\"total-time\");\n  const brightnessSlider = document.getElementById(\"brightness-slider\");\n  const applyButton = document.getElementById(\"apply-button\");\n  // debugger \n\n  let brightness = 100;\n  let stream;\n  let mediaRecorder;\n\n  // Event listeners\n\n  input.addEventListener(\"change\", e => {\n    // console.log(\"hi\")\n    e.preventDefault();\n    const file = e.target.files[0];\n    player.src = URL.createObjectURL(file);\n    player.onloadedmetadata = function () {\n      player.style.height = `${player.videoHeight / player.videoWidth * player.clientWidth}px`;\n      playButton.disabled = false;\n    };\n  });\n  playButton.addEventListener(\"click\", function () {\n    player.play();\n  });\n  pauseButton.addEventListener(\"click\", function () {\n    player.pause();\n  });\n\n  // playButton.addEventListener(\"click\", e => {\n  //     if (player.paused) {\n  //         player.play();\n  //         playButton.innerHTML = \"Pause\";\n  //     } else {\n  //         player.pause();\n  //         playButton.innerHTML = \"Play\";\n  //     }\n  // });\n\n  seekBar.addEventListener(\"input\", e => {\n    player.currentTime = player.duration / 100 * e.target.value;\n  });\n  player.addEventListener(\"timeupdate\", e => {\n    seekBar.value = player.currentTime / player.duration * 100;\n  });\n  seekBar.addEventListener(\"mousedown\", e => {\n    player.pause();\n  });\n  seekBar.addEventListener(\"mouseup\", e => {\n    player.play();\n  });\n  function formatTime(time) {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n  }\n  player.ontimeupdate = function () {\n    // Update current time and total time displays\n    currentTime.innerHTML = formatTime(player.currentTime);\n    totalTime.innerHTML = formatTime(player.duration);\n\n    // Update seek bar position\n    seekBar.value = player.currentTime / player.duration * 100;\n  };\n\n  // Event listener for when the user seeks through the video\n  seekBar.addEventListener(\"input\", function () {\n    player.currentTime = seekBar.value / 100 * player.duration;\n  });\n  seekBar.addEventListener(\"change\", function () {\n    const clickedTime = seekBar.value / 100 * player.duration;\n    console.log(\"The video is at \" + formatTime(clickedTime) + \" when you clicked\");\n  });\n  recordButton.addEventListener(\"click\", e => {\n    if (recordButton.innerHTML === \"Start Recording\") {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(s => {\n        stream = s;\n        mediaRecorder = new MediaRecorder(stream);\n        mediaRecorder.start();\n        const chunks = [];\n        mediaRecorder.addEventListener(\"dataavailable\", event => {\n          chunks.push(event.data);\n        });\n      });\n    }\n  });\n\n  // stopButton.addEventListener(\"click\", e => {\n  //     mediaRecorder.stop();\n  //     recordButton.innerHTML = \"Start Recording\";\n  //     stopButton.disabled = true;\n  //     playButton.disabled = false;\n  //     pauseButton.disabled = false;\n  //     const recordedBlob = new Blob(chunks, { type: \"video/mp4\" });\n\n  //     player.src = URL.createObjectURL(recordedBlob);\n\n  // player.onloadedmetadata = function() {\n  //     player.style.height = `${(player.videoHeight / player.videoWidth) * player.clientWidth}px`;\n  //         };\n  // });\n  // });\n  // recordButton.innerHTML = \"Stop Recording\";\n  // stopButton.disabled = false;\n  // } else {\n  // mediaRecorder.stop();\n  // recordButton.innerHTML = \"Start Recording\";\n  // stopButton.disabled = true;\n  // playButton.disabled = false;\n  // pauseButton.disabled = false;\n  // }\n  // });\n\n  // stopButton.addEventListener(\"click\", e => {\n  //     mediaRecorder.stop();\n  //     recordButton.innerHTML = \"Start Recording\";\n  //     stopButton.disabled = true;\n  //     playButton.disabled = false;\n  //     pauseButton.disabled = false;\n  // });\n\n  // pauseButton.addEventListener(\"click\", e => {\n  //     if (player.paused) {\n  //         player.play();\n  //         pauseButton.innerHTML = \"Pause\";\n  //             } else {\n  //                 player.pause();\n  //                 pauseButton.innerHTML = \"Play\";\n  //             }\n  //     });\n\n  // player.addEventListener(\"play\", e => {\n  //     pauseButton.innerHTML = \"Pause\";\n  // });\n\n  // player.addEventListener(\"pause\", e => {\n  //     pauseButton.innerHTML = \"Play\";\n  // });\n\n  // let imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  // debugger\n  // brightnessButton.addEventListener(\"click\", e => {\n  //     canvas.width = player.videoWidth;\n  //     canvas.height = player.videoHeight;\n  //     ctx.drawImage(player, 0, 0);\n  //     let imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  //     let data = imageData.data;\n  //     for (let i = 0; i < data.length; i += 4) {\n  //         data[i] += 50;\n  //         data[i + 1] += 50;\n  //         data[i + 2] += 50;\n  //     }\n  //     ctx.putImageData(imageData, 0, 0);\n\n  brightnessButton.addEventListener(\"click\", e => {\n    canvas.width = player.videoWidth;\n    canvas.height = player.videoHeight;\n    ctx.drawImage(player, 0, 0);\n    let imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    let data = imageData.data;\n    // debugger\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = data[i] * (brightness / 100);\n      data[i + 1] = data[i + 1] * (brightness / 100);\n      data[i + 2] = data[i + 2] * (brightness / 100);\n    }\n    ctx.putImageData(imageData, 0, 0);\n    player.src = canvas.toDataURL() && player.src;\n  });\n  brightnessSlider.addEventListener(\"change\", e => {\n    const value = e.target.value;\n    brightness = value;\n    // You can use the value to adjust the brightness of the video.\n  });\n\n  applyButton.addEventListener(\"click\", () => {\n    player.src = canvas.toDataURL();\n  });\n});\n// })//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaHJvbWF0aWNhLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;